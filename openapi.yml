openapi: 3.1.0
info:
  title: Notion API
  version: v1.0.0
  description: >
    🚨 重要: このOpenAPI仕様は標準的なNotion APIとは異なる特殊な実装を含みます。
    GPTsでの利用を前提とした、カスタマイズされたリバースプロキシ用の設定です。

servers:
  - url: https://gpts-notion-reverse-proxy.rioto3.jp/https://api.notion.com

paths:
  /v1/blocks/{block_id}/children:
    get:
      x-openai-isConsequential: false
      description: Retrieve children of a block
      operationId: getBlockChildren
      tags:
        - Blocks
      parameters:
        - name: block_id
          in: path
          required: true
          description: ID of the block or page ID to get the child process
          schema:
            type: string
        - name: start_cursor
          in: query
          description: A cursor to paginate through the block's children
          schema:
            type: string
        - name: page_size
          in: query
          description: The number of items from the block's children to return per page
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    enum:
                      - list
                  results:
                    type: array
                    items:
                      type: object
                  next_cursor:
                    type: string
                  has_more:
                    type: boolean
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error

  /v1/search:
    post:
      x-openai-isConsequential: false
      description: Search across all pages and databases
      operationId: search
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: Text to search for
                sort:
                  type: object
                  properties:
                    direction:
                      type: string
                      enum:
                        - ascending
                        - descending
                    timestamp:
                      type: string
                filter:
                  type: object
                  properties:
                    property:
                      type: string
                    value:
                      type: object
                start_cursor:
                  type: string
                page_size:
                  type: integer
              required:
                - query
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                  next_cursor:
                    type: string
                  has_more:
                    type: boolean
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /v1/databases/{database_id}/query:
    post:
      x-openai-isConsequential: false
      description: Query a database
      operationId: queryDatabase
      tags:
        - Databases
      parameters:
        - name: database_id
          in: path
          required: true
          description: ID of the database to query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: Filter conditions for the query
                sorts:
                  type: array
                  items:
                    type: object
                start_cursor:
                  type: string
                page_size:
                  type: integer
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    enum:
                      - list
                  results:
                    type: array
                    items:
                      type: object
                  next_cursor:
                    type: string
                  has_more:
                    type: boolean
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error

  /v1/pages:
    post:
      description: >
        Notion ページを作成する（特殊な実装）

        🚨 重要: 標準的なNotion API仕様とは大きく異なる実装方法です。
        
        主な注意点:
        - プロパティと子要素を単一の文字列 (propertiesAndChildrenString) で渡す
        - JSONデータは完全にエスケープされた文字列として送信する必要がある
        - 標準のNotion APIドキュメントに記載のない独自の拡張仕様を使用

      x-important-notes:
        - このAPIを使用する際は、必ずJSONを完全にエスケープし、文字列として送信すること
        - プロパティと子要素の構造は通常のNotion API形式とは異なる
        - JSONの文字列内部は正確にフォーマットされている必要がある
        - エラーを避けるため、JSONのエスケープと構造に細心の注意を払うこと

      x-openai-isConsequential: false
      operationId: createPage
      tags:
        - Pages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - parent
                - propertiesAndChildrenString
              properties:
                parent:
                  type: object
                  required:
                    - type
                    - database_id
                  properties:
                    type:
                      type: string
                      enum:
                        - database_id
                      default: database_id
                    database_id:
                      type: string
                propertiesAndChildrenString:
                  type: string
                  description: >
                    🔑 特殊な実装: JSONデータを完全にエスケープした文字列として送信
                    
                    注意:
                    - 通常のNotion APIとは異なる形式
                    - JSONは完全にエスケープされている必要がある
                    - プロパティと子要素を単一の文字列として渡す

              example:
                parent:
                  type: database_id
                  database_id: database_id_here
                propertiesAndChildrenString: '{\"properties\":{\"Name\":{\"title\":[{\"text\":{\"content\":\"新しいInboxタスク\"}}]}},\"children\":[{\"object\":\"block\",\"type\":\"heading_2\",\"heading_2\":{\"rich_text\":[{\"text\":{\"content\":\"タスクの詳細\"}}]}},{\"object\":\"block\",\"type\":\"paragraph\",\"paragraph\":{\"rich_text\":[{\"type\":\"text\",\"text\":{\"content\":\"ここに本文を入力します。これは一般的な段落です。\",\"link\":null}}]}}]}'

      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  object:
                    type: string
                  created_time:
                    type: string
                  last_edited_time:
                    type: string
                  parent:
                    type: object
                  archived:
                    type: boolean
                  properties:
                    type: object
                  url:
                    type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error




  /v1/pages/{page_id}:
    patch:
      x-openai-isConsequential: false
      description: >
        🚨 ページのプロパティを更新する特殊な実装
  
        重要な注意点:
        - 標準的なNotion APIとは異なる特殊な更新方法
        - プロパティと子要素を単一の文字列 (propertiesAndChildrenString) で渡す
        - JSONデータは完全にエスケープされた文字列として送信する必要がある
        - 標準のNotion APIドキュメントに記載のない独自の拡張仕様を使用
  
      x-important-notes:
        - このAPIを使用する際は、必ずJSONを完全にエスケープし、文字列として送信すること
        - プロパティと子要素の構造は通常のNotion API形式とは異なる
        - JSONの文字列内部は正確にフォーマットされている必要がある
        - エラーを避けるため、JSONのエスケープと構造に細心の注意を払うこと
        

      
      operationId: updatePage
      tags:
        - Pages
      parameters:
        - name: page_id
          in: path
          required: true
          description: ID of the page to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                propertiesAndChildrenString:
                  type: string
                  description: JSON string containing properties to update and optional children blocks
                archived:
                  type: boolean
                  description: Whether the page is archived
              example:
                propertiesAndChildrenString: '{\"properties\":{\"Name\":{\"title\":[{\"text\":{\"content\":\"更新されたタスク\"}}]}},\"children\":[{\"object\":\"block\",\"type\":\"heading_2\",\"heading_2\":{\"rich_text\":[{\"text\":{\"content\":\"タスクの詳細\"}}]}},{\"object\":\"block\",\"type\":\"paragraph\",\"paragraph\":{\"rich_text\":[{\"type\":\"text\",\"text\":{\"content\":\"ここに本文を入力します。これは一般的な段落です。\",\"link\":null}}]}}]}'
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  object:
                    type: string
                  created_time:
                    type: string
                  last_edited_time:
                    type: string
                  parent:
                    type: object
                  archived:
                    type: boolean
                  properties:
                    type: object
                  url:
                    type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error





          
    get:
      x-openai-isConsequential: false
      description: Retrieve a page
      operationId: retrievePage
      tags:
        - Pages
      parameters:
        - name: page_id
          in: path
          required: true
          description: ID of the page to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  object:
                    type: string
                  created_time:
                    type: string
                  last_edited_time:
                    type: string
                  parent:
                    type: object
                  archived:
                    type: boolean
                  properties:
                    type: object
                  url:
                    type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error

components:
  schemas: {}
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
